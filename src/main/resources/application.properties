logging.level.=ERROR
logging.level.com.alfresco.consulting=ERROR
logging.level.com.alfresco.consulting.cmds.TestTruststore=DEBUG


ANSI_RESET=\u001B[0m
ANSI_BLACK=\u001B[30m
ANSI_RED=\u001B[31m"
ANSI_GREEN=\u001B[32m
ANSI_YELLOW=\u001B[33m
ANSI_BLUE=\u001B[34m
ANSI_PURPLE=\u001B[35m
ANSI_CYAN=\u001B[36m
ANSI_GRAY=\u001B[37m
ANSI_WHITE=\u001B[37;1m

## Documentation for Rename Command
usage.rename=\t${ANSI_BLUE}NAME${ANSI_RESET}\n\t\t${ANSI_GREEN}Rename - rename an amp module${ANSI_RESET}\n\
\t${ANSI_BLUE}SYNOPSIS${ANSI_RESET}\n\
\t${ANSI_YELLOW}rename or rn ${ANSI_PURPLE}[--rename.from=repo-amp] --rename.to=new-name${ANSI_RESET}\n\
\t${ANSI_BLUE}DESCRIPTION${ANSI_RESET}\n\
\t\tThe rename command is used to rename an amp file from one name to another.\n\
\t\tThis rename function will also update the appropriate pom.xml and\n\
\t\tand files needed to bootstrap the project into the all-in-one sdk.\n\
\t${ANSI_BLUE}OPTIONS${ANSI_RESET}\n\
\t\t${ANSI_PURPLE}--rename.from${ANSI_RESET}\n\t\t\tExisting Maven module to be renamed\n\
\t\t${ANSI_PURPLE}--rename.to${ANSI_RESET}\n\t\t\tThe new name to rename the maven project to.\n

## Documentation for Remove Examples Command
usage.removeexamples=\t${ANSI_BLUE}NAME${ANSI_RESET}\n\t\t${ANSI_GREEN}RemoveExamples - Remove example files${ANSI_RESET}\n\
\t${ANSI_BLUE}SYNOPSIS${ANSI_RESET}\n\
\t${ANSI_YELLOW}RemoveExamples or re${ANSI_RESET}\n\
\t${ANSI_BLUE}DESCRIPTION${ANSI_RESET}\n\
\t\tThe remove examples command will remove the example hello-world stubs\n\
\t\tthat are delivered in the all-in-one sdk.\n\
\t${ANSI_BLUE}OPTIONS${ANSI_RESET}\n\
\t\t-none-\n

## Documentation for trust store command
usage.testtruststore=\t${ANSI_BLUE}NAME${ANSI_RESET}\n\t\t${ANSI_GREEN}TestTruststore - Test an Alfresco truststore${ANSI_RESET}\n\
\t${ANSI_BLUE}SYNOPSIS${ANSI_RESET}\n\
\t${ANSI_YELLOW}TestTruststore or tt ${ANSI_PURPLE}--tt.host=example.com[:port] --tt.store=path/to/store --tt.pass [--tt.trust=true]\
   [--tt.storetype=JCEKS] [--tt.backup=/path/to/backup] [--tt.writeto=keystore]${ANSI_RESET}\n\
\t${ANSI_BLUE}DESCRIPTION${ANSI_RESET}\n\
\t\tTest an Alfresco JCEKS truststore against a host. This helps in validating\n\
\t\tthat the appropriate CA is in the truststore.\n\
\t\tAlso note that this command assumes that the truststore is accompanied by\n\
\t\tssl-truststore-passwords.properties.\n\
\t${ANSI_BLUE}OPTIONS${ANSI_RESET}\n\
\t\t${ANSI_PURPLE}--tt.host[:port]${ANSI_RESET}\n\t\t\tHost name to test. For example: www.alfresco.com:8443. Port 443 is default.\n\
\t\t${ANSI_PURPLE}--tt.store${ANSI_RESET}\n\t\t\tJCEKS Trust store file path. \n\
\t\t${ANSI_PURPLE}--tt.pass${ANSI_RESET}\n\t\t\tPassword for the trust store\n\
\t\t${ANSI_PURPLE}--tt.trust${ANSI_RESET}\n\t\t\tIf this parameter is set to true (default false),then the public cert\n\
\t\t\tof the host will be download into the truststore.\n\
\t\t${ANSI_PURPLE}--tt.backup${ANSI_RESET}\n\t\t\tDirectory to backup truststore. Default is to backup in same directory as keystore\n\
\t\t${ANSI_PURPLE}--tt.writeto${ANSI_RESET}\n\t\t\tFolder or File to write store file to. Default is to overwrite keystore\n\
\t\t${ANSI_PURPLE}--tt.storetype${ANSI_RESET}\n\t\t\tKeystore type. Default JCEKS.\n




## All documentation
usage.general=${ANSI_GREEN}Alfresco SDK development tools${ANSI_RESET}\n\
   \t${ANSI_GREEN}Usage: ${ANSI_RESET}${ANSI_YELLOW}cmd ${ANSI_PURPLE}[options]${ANSI_RESET} \n\n\
   \t${ANSI_GREEN}Available commands are:${ANSI_RESET}\n\
   ${usage.rename}\n\n\
   ${usage.removeexamples}\n\n\
   ${usage.testtruststore}\n\n\
   \t${ANSI_BLUE}ENVIRONMENT${ANSI_RESET}\n\
   \t\tAlfresco Maven SDK 2.1\n\
   \t\tAlfresco 5.x\n

file.ignores=.|..|overlays|.git|.svn|.hg|alf_data_dev

## Rename
rename.info=Renaming _from_ to _to_




## Remove Examples
example.files[0]=.*/demoamp
example.files[1]=.*/demoamp.*
example.files[2]=.*/helloworld.*
example.files[3]=.*/demoamp/.*


short_name.rename=rn
short_name.remove_examples=re
short_name.testtruststore=tt

tt.trust.trusted=No errors, certificate is already trusted


